/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DB;
import java.sql.*;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author My Pc
 */
public class IssueTable extends javax.swing.JFrame {
ConnectionClass cobj;
PreparedStatement pst;
ResultSet rst;
JTable table;
DefaultTableModel model;
JScrollPane scroll; 


    /**
     * Creates new form IssueTable
     */
    public IssueTable() {
        initComponents();
        cobj=new ConnectionClass();
        model=new DefaultTableModel();
        model.addColumn("Issue Date");
        model.addColumn("Book Name");
        model.addColumn("Author Name");
        model.addColumn("Student Name");
        table=new JTable(model);
        scroll=new JScrollPane(table);
        scroll.setBounds(50, 100, 500, 500);
        add(scroll);
        cobj.Connect();
        try
        {
        pst=cobj.conn.prepareStatement("SELECT        dbo.tbIssue.IssueDate, dbo.tbIssue.BookName, dbo.tbIssue.AuthorName, dbo.tbStudent.StudentName\n" +
"FROM            dbo.tbIssue INNER JOIN\n" +
"                         dbo.tbStudent ON dbo.tbIssue.StudentID = dbo.tbStudent.StudentID");
      rst=pst.executeQuery();
      while(rst.next())
      {
          model.insertRow(model.getRowCount(),new Object[]{rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),});
      }
      rst.close();
        }
        catch(Exception ex)
        {
            System.err.println("Error in Populating Table"+ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
